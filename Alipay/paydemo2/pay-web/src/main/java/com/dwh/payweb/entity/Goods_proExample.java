package com.dwh.payweb.entity;

import java.util.ArrayList;
import java.util.List;

public class Goods_proExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public Goods_proExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andGidIsNull() {
            addCriterion("Gid is null");
            return (Criteria) this;
        }

        public Criteria andGidIsNotNull() {
            addCriterion("Gid is not null");
            return (Criteria) this;
        }

        public Criteria andGidEqualTo(String value) {
            addCriterion("Gid =", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidNotEqualTo(String value) {
            addCriterion("Gid <>", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidGreaterThan(String value) {
            addCriterion("Gid >", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidGreaterThanOrEqualTo(String value) {
            addCriterion("Gid >=", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidLessThan(String value) {
            addCriterion("Gid <", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidLessThanOrEqualTo(String value) {
            addCriterion("Gid <=", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidLike(String value) {
            addCriterion("Gid like", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidNotLike(String value) {
            addCriterion("Gid not like", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidIn(List<String> values) {
            addCriterion("Gid in", values, "gid");
            return (Criteria) this;
        }

        public Criteria andGidNotIn(List<String> values) {
            addCriterion("Gid not in", values, "gid");
            return (Criteria) this;
        }

        public Criteria andGidBetween(String value1, String value2) {
            addCriterion("Gid between", value1, value2, "gid");
            return (Criteria) this;
        }

        public Criteria andGidNotBetween(String value1, String value2) {
            addCriterion("Gid not between", value1, value2, "gid");
            return (Criteria) this;
        }

        public Criteria andProidIsNull() {
            addCriterion("proid is null");
            return (Criteria) this;
        }

        public Criteria andProidIsNotNull() {
            addCriterion("proid is not null");
            return (Criteria) this;
        }

        public Criteria andProidEqualTo(String value) {
            addCriterion("proid =", value, "proid");
            return (Criteria) this;
        }

        public Criteria andProidNotEqualTo(String value) {
            addCriterion("proid <>", value, "proid");
            return (Criteria) this;
        }

        public Criteria andProidGreaterThan(String value) {
            addCriterion("proid >", value, "proid");
            return (Criteria) this;
        }

        public Criteria andProidGreaterThanOrEqualTo(String value) {
            addCriterion("proid >=", value, "proid");
            return (Criteria) this;
        }

        public Criteria andProidLessThan(String value) {
            addCriterion("proid <", value, "proid");
            return (Criteria) this;
        }

        public Criteria andProidLessThanOrEqualTo(String value) {
            addCriterion("proid <=", value, "proid");
            return (Criteria) this;
        }

        public Criteria andProidLike(String value) {
            addCriterion("proid like", value, "proid");
            return (Criteria) this;
        }

        public Criteria andProidNotLike(String value) {
            addCriterion("proid not like", value, "proid");
            return (Criteria) this;
        }

        public Criteria andProidIn(List<String> values) {
            addCriterion("proid in", values, "proid");
            return (Criteria) this;
        }

        public Criteria andProidNotIn(List<String> values) {
            addCriterion("proid not in", values, "proid");
            return (Criteria) this;
        }

        public Criteria andProidBetween(String value1, String value2) {
            addCriterion("proid between", value1, value2, "proid");
            return (Criteria) this;
        }

        public Criteria andProidNotBetween(String value1, String value2) {
            addCriterion("proid not between", value1, value2, "proid");
            return (Criteria) this;
        }

        public Criteria andPNumberIsNull() {
            addCriterion("p_number is null");
            return (Criteria) this;
        }

        public Criteria andPNumberIsNotNull() {
            addCriterion("p_number is not null");
            return (Criteria) this;
        }

        public Criteria andPNumberEqualTo(String value) {
            addCriterion("p_number =", value, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberNotEqualTo(String value) {
            addCriterion("p_number <>", value, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberGreaterThan(String value) {
            addCriterion("p_number >", value, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberGreaterThanOrEqualTo(String value) {
            addCriterion("p_number >=", value, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberLessThan(String value) {
            addCriterion("p_number <", value, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberLessThanOrEqualTo(String value) {
            addCriterion("p_number <=", value, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberLike(String value) {
            addCriterion("p_number like", value, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberNotLike(String value) {
            addCriterion("p_number not like", value, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberIn(List<String> values) {
            addCriterion("p_number in", values, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberNotIn(List<String> values) {
            addCriterion("p_number not in", values, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberBetween(String value1, String value2) {
            addCriterion("p_number between", value1, value2, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPNumberNotBetween(String value1, String value2) {
            addCriterion("p_number not between", value1, value2, "pNumber");
            return (Criteria) this;
        }

        public Criteria andPAreaIsNull() {
            addCriterion("p_area is null");
            return (Criteria) this;
        }

        public Criteria andPAreaIsNotNull() {
            addCriterion("p_area is not null");
            return (Criteria) this;
        }

        public Criteria andPAreaEqualTo(Integer value) {
            addCriterion("p_area =", value, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaNotEqualTo(Integer value) {
            addCriterion("p_area <>", value, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaGreaterThan(Integer value) {
            addCriterion("p_area >", value, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaGreaterThanOrEqualTo(Integer value) {
            addCriterion("p_area >=", value, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaLessThan(Integer value) {
            addCriterion("p_area <", value, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaLessThanOrEqualTo(Integer value) {
            addCriterion("p_area <=", value, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaIn(List<Integer> values) {
            addCriterion("p_area in", values, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaNotIn(List<Integer> values) {
            addCriterion("p_area not in", values, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaBetween(Integer value1, Integer value2) {
            addCriterion("p_area between", value1, value2, "pArea");
            return (Criteria) this;
        }

        public Criteria andPAreaNotBetween(Integer value1, Integer value2) {
            addCriterion("p_area not between", value1, value2, "pArea");
            return (Criteria) this;
        }

        public Criteria andMAreaIsNull() {
            addCriterion("m_area is null");
            return (Criteria) this;
        }

        public Criteria andMAreaIsNotNull() {
            addCriterion("m_area is not null");
            return (Criteria) this;
        }

        public Criteria andMAreaEqualTo(Integer value) {
            addCriterion("m_area =", value, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaNotEqualTo(Integer value) {
            addCriterion("m_area <>", value, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaGreaterThan(Integer value) {
            addCriterion("m_area >", value, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaGreaterThanOrEqualTo(Integer value) {
            addCriterion("m_area >=", value, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaLessThan(Integer value) {
            addCriterion("m_area <", value, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaLessThanOrEqualTo(Integer value) {
            addCriterion("m_area <=", value, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaIn(List<Integer> values) {
            addCriterion("m_area in", values, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaNotIn(List<Integer> values) {
            addCriterion("m_area not in", values, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaBetween(Integer value1, Integer value2) {
            addCriterion("m_area between", value1, value2, "mArea");
            return (Criteria) this;
        }

        public Criteria andMAreaNotBetween(Integer value1, Integer value2) {
            addCriterion("m_area not between", value1, value2, "mArea");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated do_not_delete_during_merge Tue Nov 05 22:44:27 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dwh_goods_pro
     *
     * @mbg.generated Tue Nov 05 22:44:27 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}