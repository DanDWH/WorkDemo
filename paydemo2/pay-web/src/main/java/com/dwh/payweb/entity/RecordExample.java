package com.dwh.payweb.entity;

import java.util.ArrayList;
import java.util.List;

public class RecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public RecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUsernameIsNull() {
            addCriterion("Username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("Username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("Username =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("Username <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("Username >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("Username >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("Username <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("Username <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("Username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("Username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("Username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("Username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("Username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("Username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andStoreidIsNull() {
            addCriterion("StoreId is null");
            return (Criteria) this;
        }

        public Criteria andStoreidIsNotNull() {
            addCriterion("StoreId is not null");
            return (Criteria) this;
        }

        public Criteria andStoreidEqualTo(Integer value) {
            addCriterion("StoreId =", value, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidNotEqualTo(Integer value) {
            addCriterion("StoreId <>", value, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidGreaterThan(Integer value) {
            addCriterion("StoreId >", value, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidGreaterThanOrEqualTo(Integer value) {
            addCriterion("StoreId >=", value, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidLessThan(Integer value) {
            addCriterion("StoreId <", value, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidLessThanOrEqualTo(Integer value) {
            addCriterion("StoreId <=", value, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidIn(List<Integer> values) {
            addCriterion("StoreId in", values, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidNotIn(List<Integer> values) {
            addCriterion("StoreId not in", values, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidBetween(Integer value1, Integer value2) {
            addCriterion("StoreId between", value1, value2, "storeid");
            return (Criteria) this;
        }

        public Criteria andStoreidNotBetween(Integer value1, Integer value2) {
            addCriterion("StoreId not between", value1, value2, "storeid");
            return (Criteria) this;
        }

        public Criteria andDiscernidIsNull() {
            addCriterion("discernId is null");
            return (Criteria) this;
        }

        public Criteria andDiscernidIsNotNull() {
            addCriterion("discernId is not null");
            return (Criteria) this;
        }

        public Criteria andDiscernidEqualTo(Integer value) {
            addCriterion("discernId =", value, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidNotEqualTo(Integer value) {
            addCriterion("discernId <>", value, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidGreaterThan(Integer value) {
            addCriterion("discernId >", value, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidGreaterThanOrEqualTo(Integer value) {
            addCriterion("discernId >=", value, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidLessThan(Integer value) {
            addCriterion("discernId <", value, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidLessThanOrEqualTo(Integer value) {
            addCriterion("discernId <=", value, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidIn(List<Integer> values) {
            addCriterion("discernId in", values, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidNotIn(List<Integer> values) {
            addCriterion("discernId not in", values, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidBetween(Integer value1, Integer value2) {
            addCriterion("discernId between", value1, value2, "discernid");
            return (Criteria) this;
        }

        public Criteria andDiscernidNotBetween(Integer value1, Integer value2) {
            addCriterion("discernId not between", value1, value2, "discernid");
            return (Criteria) this;
        }

        public Criteria andBusinidIsNull() {
            addCriterion("BusinId is null");
            return (Criteria) this;
        }

        public Criteria andBusinidIsNotNull() {
            addCriterion("BusinId is not null");
            return (Criteria) this;
        }

        public Criteria andBusinidEqualTo(Integer value) {
            addCriterion("BusinId =", value, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidNotEqualTo(Integer value) {
            addCriterion("BusinId <>", value, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidGreaterThan(Integer value) {
            addCriterion("BusinId >", value, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidGreaterThanOrEqualTo(Integer value) {
            addCriterion("BusinId >=", value, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidLessThan(Integer value) {
            addCriterion("BusinId <", value, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidLessThanOrEqualTo(Integer value) {
            addCriterion("BusinId <=", value, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidIn(List<Integer> values) {
            addCriterion("BusinId in", values, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidNotIn(List<Integer> values) {
            addCriterion("BusinId not in", values, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidBetween(Integer value1, Integer value2) {
            addCriterion("BusinId between", value1, value2, "businid");
            return (Criteria) this;
        }

        public Criteria andBusinidNotBetween(Integer value1, Integer value2) {
            addCriterion("BusinId not between", value1, value2, "businid");
            return (Criteria) this;
        }

        public Criteria andPayDateIsNull() {
            addCriterion("Pay_Date is null");
            return (Criteria) this;
        }

        public Criteria andPayDateIsNotNull() {
            addCriterion("Pay_Date is not null");
            return (Criteria) this;
        }

        public Criteria andPayDateEqualTo(String value) {
            addCriterion("Pay_Date =", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotEqualTo(String value) {
            addCriterion("Pay_Date <>", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateGreaterThan(String value) {
            addCriterion("Pay_Date >", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateGreaterThanOrEqualTo(String value) {
            addCriterion("Pay_Date >=", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateLessThan(String value) {
            addCriterion("Pay_Date <", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateLessThanOrEqualTo(String value) {
            addCriterion("Pay_Date <=", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateLike(String value) {
            addCriterion("Pay_Date like", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotLike(String value) {
            addCriterion("Pay_Date not like", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateIn(List<String> values) {
            addCriterion("Pay_Date in", values, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotIn(List<String> values) {
            addCriterion("Pay_Date not in", values, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateBetween(String value1, String value2) {
            addCriterion("Pay_Date between", value1, value2, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotBetween(String value1, String value2) {
            addCriterion("Pay_Date not between", value1, value2, "payDate");
            return (Criteria) this;
        }

        public Criteria andStatisIsNull() {
            addCriterion("statis is null");
            return (Criteria) this;
        }

        public Criteria andStatisIsNotNull() {
            addCriterion("statis is not null");
            return (Criteria) this;
        }

        public Criteria andStatisEqualTo(Integer value) {
            addCriterion("statis =", value, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisNotEqualTo(Integer value) {
            addCriterion("statis <>", value, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisGreaterThan(Integer value) {
            addCriterion("statis >", value, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisGreaterThanOrEqualTo(Integer value) {
            addCriterion("statis >=", value, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisLessThan(Integer value) {
            addCriterion("statis <", value, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisLessThanOrEqualTo(Integer value) {
            addCriterion("statis <=", value, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisIn(List<Integer> values) {
            addCriterion("statis in", values, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisNotIn(List<Integer> values) {
            addCriterion("statis not in", values, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisBetween(Integer value1, Integer value2) {
            addCriterion("statis between", value1, value2, "statis");
            return (Criteria) this;
        }

        public Criteria andStatisNotBetween(Integer value1, Integer value2) {
            addCriterion("statis not between", value1, value2, "statis");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dwh_user_store
     *
     * @mbg.generated do_not_delete_during_merge Fri May 22 18:32:04 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dwh_user_store
     *
     * @mbg.generated Fri May 22 18:32:04 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}